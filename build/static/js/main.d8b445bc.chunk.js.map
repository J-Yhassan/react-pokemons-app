{"version":3,"sources":["models/mock-pokemons.ts","services/pokemon-service.ts","helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","pages/page-not-found.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentification-service.ts","pages/login.tsx","PrivateRoute.tsx","app.tsx","index.tsx"],"names":["POKEMONS","id","name","hp","cp","picture","types","created","Date","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","pokemon","method","body","JSON","stringify","headers","index","findIndex","filter","push","term","includes","Object","keys","length","console","process","formatDate","date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","borderColor","useState","setColor","history","useHistory","className","onClick","onMouseEnter","onMouseLeave","style","src","alt","map","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","isAddForm","validateForm","newForm","startsWith","endsWith","test","isTypeValid","addPokemon","updatePokemon","onSubmit","preventDefault","handleSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthentificationService","userName","password","isAuthentificated","setTimeout","Login","username","message","setMessage","AuthenticationService","login","isAuthenticated","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d8b445bc.chunk.js","sourcesContent":["import Pokemon from './pokemon';\r\n   \r\nexport const POKEMONS: Pokemon[] = [\r\n {\r\n  id: 1,\r\n  name: \"Bulbizarre\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n  types: [\"Plante\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 2,\r\n  name: \"Salamèche\",\r\n  hp: 28,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 3,\r\n  name: \"Carapuce\",\r\n  hp: 21,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n  types: [\"Eau\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 4,\r\n  name: \"Aspicot\",\r\n  hp: 16,\r\n  cp: 2,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n  types: [\"Insecte\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 5,\r\n  name: \"Roucool\",\r\n  hp: 30,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 6,\r\n  name: \"Rattata\",\r\n  hp: 18,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 7,\r\n  name: \"Piafabec\",\r\n  hp: 14,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 8,\r\n  name: \"Abo\",\r\n  hp: 16,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n  types: [\"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 9,\r\n  name: \"Pikachu\",\r\n  hp: 21,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n  types: [\"Electrik\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 10,\r\n  name: \"Sabelette\",\r\n  hp: 19,\r\n  cp: 3,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 11,\r\n  name: \"Mélofée\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n  types: [\"Fée\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 12,\r\n  name: \"Groupix\",\r\n  hp: 17,\r\n  cp: 8,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n }\r\n];\r\n  \r\nexport default POKEMONS;","import POKEMONS from \"../models/mock-pokemons\";\r\nimport Pokemon from \"../models/pokemon\";\r\n \r\nexport default class PokemonService {\r\n  static pokemons:Pokemon[] = POKEMONS;\r\n  \r\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\r\n\r\n  static getPokemons(): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch('http://localhost:3001/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n  \r\n  static getPokemon(id: number): Promise<Pokemon|null> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\r\n    }); \r\n  }\r\n  \r\n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\r\n      resolve({});\r\n    }); \r\n  }\r\n  \r\n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\r\n    pokemon.created = new Date(pokemon.created);\r\n  \r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    }); \r\n  }\r\n  \r\n  static searchPokemon(term: string): Promise<Pokemon[]> {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n  \r\n    return new Promise(resolve => {    \r\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\r\n      resolve(results);\r\n    });\r\n  \r\n  }\r\n  \r\n  static isEmpty(data: Object): boolean {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n  \r\n  static handleError(error: Error): void {\r\n    console.error(error);\r\n  }\r\n}","const formatDate =(date: Date = new Date()): string => {// personnaliser le hook\r\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n}\r\n\r\nexport default formatDate;","const formatType = (type: string): string => {\r\n    let color: string;\r\n   \r\n    switch (type) {\r\n      case 'Feu': \r\n        color = 'red lighten-1'; \r\n        break; \r\n      case 'Eau': \r\n        color = 'blue lighten-1'; \r\n        break; \r\n      case 'Plante': \r\n        color = 'green lighten-1'; \r\n        break; \r\n      case 'Insecte': \r\n        color = 'brown lighten-1'; \r\n        break; \r\n      case 'Normal': \r\n        color = 'grey lighten-3'; \r\n        break; \r\n      case 'Vol': \r\n        color = 'blue lighten-3'; \r\n        break; \r\n      case 'Poison': \r\n        color = 'deep-purple accent-1'; \r\n        break; \r\n      case 'Fée': \r\n        color = 'pink lighten-4'; \r\n        break; \r\n      case 'Psy': \r\n        color = 'deep-purple darken-2'; \r\n        break; \r\n      case 'Electrik': \r\n        color = 'lime accent-1'; \r\n        break; \r\n      case 'Combat': \r\n        color = 'deep-orange'; \r\n        break; \r\n      default: \r\n        color = 'grey'; \r\n        break; \r\n    }\r\n   \r\n    return `chip ${color}`;\r\n  }\r\n\r\n  export default formatType;","import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport { useHistory } from 'react-router';\r\nimport './pokemon-card.css'\r\n  \r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  borderColor ?: string\r\n};\r\n  \r\nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\r\n    const [color, setColor] = useState<string>();\r\n    const history= useHistory();\r\n    \r\n    const showBorder = () =>{\r\n        setColor(borderColor);\r\n    }\r\n\r\n    const hideBorder = () => {\r\n        setColor('#f5f5f5');\r\n    }\r\n\r\n    const gotToPokemon = (id: number) => {\r\n        history.push(`/pokemons/${id}`);\r\n    }\r\n\r\n  return (\r\n    <div className=\"col s6 m4\" onClick={()=>gotToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder} style={{borderColor:color}}>\r\n      <div className=\"card horizontal\" >\r\n        <div className=\"card-image\"> \r\n          <img src={pokemon.picture} alt={pokemon.name}/>\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p><small>{formatDate(pokemon.created)}</small></p>\r\n            {pokemon.types.map(type =>(\r\n                <span key= {type} className= {formatType(type)}>{type}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonCard;","import React, { FunctionComponent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\nconst PokemonSearch: FunctionComponent = () => {\r\n \r\n  const [term, setTerm] = useState<string>('');\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const term = e.target.value;\r\n    setTerm(term);\r\n\r\n    if(term.length <= 1) {\r\n      setPokemons([]);\r\n      return;\r\n    }\r\n\r\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\r\n  }\r\n \r\n  return (\r\n    <div className=\"row\"> \r\n    <div className=\"col s12 m6 offset-m3\"> \r\n      <div className=\"card\"> \r\n      <div className=\"card-content\"> \r\n        <div className=\"input-field\"> \r\n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \r\n        </div> \r\n        <div className='collection'>\r\n        {pokemons.map((pokemon) => (\r\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\r\n            {pokemon.name}\r\n          </Link>\r\n        ))}\r\n        </div> \r\n      </div> \r\n      </div> \r\n    </div> \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport Pokemon from '../models/pokemon';\r\n//import POKEMONS from '../models/mock-pokemons';\r\nimport PokemonCard from '../components/pokemon-card';\r\nimport PokemonSearch from '../components/pokemon-search';\r\n\r\n  \r\nconst PokemonList: FunctionComponent = () => {\r\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));  \r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">Pokédex</h1>\r\n      <div className=\"container\"> \r\n        <div className=\"row\">\r\n          <PokemonSearch/>\r\n          {pokemons.map(pokemon => (\r\n            <PokemonCard key={pokemon.id} pokemon={pokemon}/>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Link className=\"btn-floating btn-large waves-effect waves-light red z-depth-3\"\r\n        style={{position: 'fixed', bottom: '25px', right: '25px'}}\r\n        to=\"/pokemon/add\">\r\n        <i className=\"material-icons\">add</i>\r\n      </Link>\r\n    </div> \r\n  );\r\n}\r\n  \r\nexport default PokemonList;","import React, { FunctionComponent } from 'react';\r\n  \r\nconst Loader: FunctionComponent = () => {\r\n   \r\n  return (\r\n    <div className=\"preloader-wrapper big active\"> \r\n      <div className=\"spinner-layer spinner-blue\"> \r\n        <div className=\"circle-clipper left\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n        <div className=\"gap-patch\"> \r\n          <div className=\"circle\"></div> \r\n        </div><div className=\"circle-clipper right\"> \r\n          <div className=\"circle\"></div> \r\n        </div>\r\n      </div> \r\n   </div> \r\n  );\r\n}\r\n   \r\nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps, Link } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-service';\r\nimport Loader from '../components/loader';\r\n  \r\ntype Params = { id: string };\r\n  \r\nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\"> \r\n            <h2 className=\"header center\">{ pokemon.name }</h2>\r\n            <div className=\"card hoverable\"> \r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                <Link to={`/pokemons/edit/${pokemon.id}`} className= \"btn btn-floating halfway-fab waves-effect waves-light\">\r\n                  <i className= \"material-icons\">edit</i>\r\n                </Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr> \r\n                        <td>Nom</td> \r\n                        <td><strong>{ pokemon.name }</strong></td> \r\n                      </tr>\r\n                      <tr> \r\n                        <td>Points de vie</td> \r\n                        <td><strong>{ pokemon.hp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Dégâts</td> \r\n                        <td><strong>{ pokemon.cp }</strong></td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Types</td> \r\n                        <td>\r\n                          {pokemon.types.map(type => (\r\n                           <span key={type} className={formatType(type)}>{type}</span>\r\n                          ))}</td> \r\n                      </tr> \r\n                      <tr> \r\n                        <td>Date de création</td> \r\n                        <td>{formatDate(pokemon.created)}</td> \r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader/></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonsDetail;","import React, { FunctionComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n  \r\nconst PageNotFound: FunctionComponent = () => {\r\n  \r\n  return (\r\n    <div className=\"center\">\r\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\r\n      <h1>Hey, cette page n'existe pas !</h1> \r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PageNotFound;","import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport {useHistory} from 'react-router-dom'\r\nimport PokemonService from '../services/pokemon-service';\r\n  \r\ntype Props = {\r\n  pokemon: Pokemon,\r\n  isEditForm:boolean\r\n};\r\n//modeliser un champs dans un formulaire\r\ntype Field = { \r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n    picture: Field,\r\n    name: Field,\r\n    hp:Field,\r\n    cp:Field,\r\n    types: Field\r\n};\r\n\r\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\r\n    //définir les champs du formulaire edit\r\n    const [form, setForm] = useState<Form>({\r\n      picture: {value: pokemon.picture}, \r\n      name: {value: pokemon.name, isValid:true}, \r\n      hp: {value: pokemon.hp, isValid:true},\r\n      cp: {value: pokemon.cp, isValid:true},\r\n      types: {value: pokemon.types, isValid:true}\r\n    }); \r\n\r\n  const history = useHistory();\r\n  \r\n  const types: string[] = [ //list de tout les types de pokemon\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n\r\n  const hasType = (type:string): boolean => {\r\n      return form.types.value.includes(type);\r\n  }\r\n\r\n  const handleInputChange = (e : React.ChangeEvent<HTMLInputElement>) =>{\r\n      const fieldName: string = e.target.name;\r\n      const fieldValue: string = e.target.value;\r\n      const newField: Field = {[fieldName]: {value: fieldValue}};\r\n\r\n      setForm({...form, ...newField});\r\n    }\r\n   \r\n const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const checked = e.target.checked;\r\n        let newField: Field;\r\n    \r\n        if(checked) {\r\n          // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\r\n          const newTypes: string[] = form.types.value.concat([type]);\r\n          newField = { value: newTypes };\r\n        } else {\r\n          // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\r\n          const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n          newField = { value: newTypes };\r\n        }\r\n    \r\n        setForm({...form, ...{ types: newField }});\r\n      }  \r\nconst handleSubmit = (e: React.FormEvent<HTMLFormElement>) =>{\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n\r\n   if(isFormValid){\r\n    pokemon.picture = form.picture.value;\r\n    pokemon.name = form.name.value;\r\n    pokemon.hp = form.hp.value;\r\n    pokemon.cp = form.cp.value;\r\n    pokemon.types = form.types.value;\r\n    \r\n    isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n}\r\n\r\nconst isAddForm = ()=>{\r\n  return !isEditForm;\r\n}\r\n\r\nconst validateForm = () => {\r\n    let newForm: Form = form;\r\n    \r\n    //validator url\r\n    if(isAddForm()){\r\n     const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\r\n     const end = \".png\";\r\n\r\n     if (!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)){\r\n       const errorMsg: string = \"l'url n'est pas valide.\";\r\n       const newField: Field = {value: form.picture.value, error: errorMsg, isValid:false};\r\n       newForm= {...form, ...{picture: newField }};\r\n     }else{\r\n      const newField: Field = {value: form.picture.value, error: '', isValid:true};\r\n      newForm= {...form, ...{picture: newField }};\r\n     }\r\n    }\r\n\r\n    // Validator name\r\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\r\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ name: newField } };\r\n    }\r\n\r\n    // Validator hp\r\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ hp: newField } };\r\n    }\r\n\r\n    // Validator cp\r\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\r\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ cp: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  }\r\n\r\n  const isTypeValid = (type: string): boolean =>{\r\n    \r\n    if(form.types.value.length === 1 && hasType(type)){\r\n        return false;\r\n    }\r\n    \r\n    if(form.types.value.length >= 3 && !hasType(type)){\r\n        return false;\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const deletePokemon = () =>{\r\n    PokemonService.deletePokemon(pokemon)\r\n    .then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n  const addPokemon = () =>{\r\n    PokemonService.addPokemon(pokemon)\r\n    .then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n  const updatePokemon = () =>{\r\n    PokemonService.updatePokemon(pokemon)\r\n    .then(() => history.push(`/pokemons`));\r\n  }\r\n\r\n\r\n  return (\r\n    <form onSubmit= {e => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\"> \r\n          {isEditForm && (\r\n            <div className=\"card-image\">\r\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\r\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\r\n              </span>\r\n            </div>\r\n            )}\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon picture */}\r\n                {isAddForm() && (\r\n                  <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">image</label>\r\n                  <input id=\"picture\" type=\"text\" name=\"picture\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.name.error &&\r\n                    <div className=\"card-panel red accent-1\">{form.picture.error}</div>\r\n                  }\r\n              </div>\r\n                )}\r\n                \r\n                  \r\n                  \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Nom</label>\r\n                    <input id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                    {form.name.error &&\r\n                      <div className=\"card-panel red accent-1\">{form.name.error}</div>\r\n                    }\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" type=\"number\" name=\"hp\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.hp.error &&\r\n                    <div className=\"card-panel red accent-1\">{form.hp.error}</div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" type=\"number\" name=\"cp\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.cp.error &&\r\n                    <div className=\"card-panel red accent-1\">{form.cp.error}</div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} disabled={!isTypeValid(type)} checked={hasType(type)} onChange= {e => selectType(type, e)}></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \r\n    </form>\r\n  );\r\n};\r\n   \r\nexport default PokemonForm;","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport Loader from '../components/loader';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\nimport PokemonService from '../services/pokemon-service';\r\n//import POKEMONS from '../models/mock-pokemons';\r\n \r\ntype Params = { id: string };\r\n  \r\nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\r\n  \r\n  useEffect(() => {\r\n   // POKEMONS.forEach(pokemon => {\r\n     // if (match.params.id === pokemon.id.toString()) {\r\n       // setPokemon(pokemon);\r\n      //}\r\n    //})\r\n\r\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n    \r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm= {true}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader/></h4>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default PokemonEdit;","export default class Pokemon {\r\n    // 1. Typage des propiétés d'un pokémon.\r\n    id: number;\r\n    hp: number;\r\n    cp: number;\r\n    name: string;\r\n    picture: string;\r\n    types: Array<string>;\r\n    created: Date;\r\n     \r\n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n    constructor(\r\n     id: number,\r\n     hp: number = 100,\r\n     cp: number = 10,\r\n     name: string = '...',\r\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/xxx.png',\r\n     types: Array<string> = ['Normal'],\r\n     created: Date = new Date()\r\n    ) {\r\n     // 3. Initialisation des propiétés d'un pokémons.\r\n     this.id = id;\r\n     this.hp = hp;\r\n     this.cp = cp;\r\n     this.name = name;\r\n     this.picture = picture;\r\n     this.types = types;\r\n     this.created = created;\r\n    }\r\n   }","import React,{ FunctionComponent, useState } from 'react';\r\nimport  Pokemon  from '../models/pokemon';\r\nimport PokemonForm from '../components/pokemon-form';\r\n\r\nconst PokemonAdd: FunctionComponent = () => {\r\n    const [id] = useState<number>(new Date().getTime());\r\n    const [pokemon] = useState <Pokemon>(new Pokemon(id));\r\n\r\n    return(\r\n        <div className=\"row\">\r\n            <h2 className=\"header center\">Ajouter un pokemon</h2>\r\n            <PokemonForm pokemon={pokemon} isEditForm= {false}></PokemonForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonAdd;\r\n","export default class AuthentificationService{\r\n    static isAuthentificated: boolean = false;\r\n\r\n    static login(userName: string, password: string): Promise<boolean>{\r\n        const isAuthentificated = (userName === 'pikachu' && password === 'pikachu');\r\n\r\n        return new Promise (resolve =>{\r\n            setTimeout(()=>{\r\n                this.isAuthentificated = isAuthentificated;\r\n                resolve(isAuthentificated);\r\n            }, 1000);\r\n        })\r\n    }\r\n}","import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../services/authentification-service';\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n  username: Field,\r\n  password: Field\r\n}\r\n\r\nconst Login: FunctionComponent = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState<Form>({\r\n    username: { value: '' },\r\n    password: { value: '' },\r\n  });\r\n\r\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (identifiant:pikachu / mot de passe:pikachu)');\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm: Form = form;\r\n\r\n    // Validator username\r\n    if(form.username.value.length < 3) {\r\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\r\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if(form.password.value.length < 6) {\r\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\r\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      setMessage('👉 Tentative de connexion en cours ...');\r\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\r\n        if(!isAuthenticated) {\r\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\r\n          return;\r\n        }\r\n        \r\n        history.push('/pokemons');\r\n        \r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && <div className=\"form-group\">\r\n                  <div className=\"card-panel grey lighten-5\">\r\n                    {message}\r\n                  </div>\r\n                </div>}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.username.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.username.error} \r\n                  </div>} \r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.password.error &&\r\n                  <div className=\"card-panel red accent-1\"> \r\n                   {form.password.error} \r\n                  </div>} \r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n \r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from '../src/services/authentification-service';\r\n  \r\nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\r\n  <Route {...rest} render={(props) => {\r\n    const isAuthentificated = AuthenticationService.isAuthentificated;\r\n    if (!isAuthentificated) {    \r\n      return <Redirect to={{ pathname: '/login' }} />\r\n    }\r\n  \r\n    return <Component {...props} />\r\n  }} />\r\n);\r\n  \r\nexport default PrivateRoute;","import React,   {FunctionComponent} from 'react';\r\nimport PokemonList from './pages/pokemon-list';\r\nimport { Link ,BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport PokemonsDetail from './pages/pokemon-detail';\r\nimport PageNotFound from './pages/page-not-found';\r\nimport PokemonEdit from './pages/pokemon-edit';\r\nimport PokemonAdd from './pages/pokemon-add';\r\nimport Login from './pages/login';\r\nimport PrivateRoute from './PrivateRoute';\r\n\r\nconst App: FunctionComponent = () =>{// un composant écrit sous forme de fonction\r\n\r\n    return(\r\n        <Router>\r\n        <div>\r\n        {/*la barre de navigation commun a toute les pages*/}\r\n            <nav style={{marginBottom: '10px'}}>\r\n                <div className=\"container\">\r\n                <Link to=\"/pokemons\" className=\"brand-logo center\">Acceuil</Link>\r\n                </div>\r\n            </nav>\r\n            {/*le système de gestion des routes de notre application*/}\r\n            <Switch>\r\n                <PrivateRoute exact path=\"/\" component={PokemonList} />\r\n                <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\r\n                <Route exact path=\"/login\" component={Login} />\r\n                <PrivateRoute exact path=\"/pokemon/add\" component={PokemonAdd} />\r\n                <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\r\n                <PrivateRoute  path=\"/pokemons/:id\" component={PokemonsDetail} />\r\n                <Route component={PageNotFound}/>\r\n            </Switch>\r\n        </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM  from \"react-dom\";\r\nimport App from \"./app\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}